NAME
    Catalyst::Action::Serialize::SimpleExcel - Serialize to Excel files

SYNOPSIS
    Serializes tabular data to an Excel file. Not terribly configurable, but
    should suffice for simple purposes.

    In your REST Controller:

        package MyApp::Controller::REST;

        use parent 'Catalyst::Controller::REST';
        use DBIx::Class::ResultClass::HashRefInflator ();
        use POSIX 'strftime';

        __PACKAGE__->config->{map}{'application/vnd.ms-excel'} = 'SimpleExcel';

        sub books : Local ActionClass('REST') {}

        sub books_GET {
            my ($self, $c) = @_;

            my $books_rs = $c->model('MyDB::Book')->search({}, {
                order_by => 'author,title'
            });

            $books_rs->result_class('DBIx::Class::ResultClass::HashRefInflator');

            my @books = map {
                [ @{$_}{qw/author title/} ]
            } $books_rs->all;

            my $authors_rs = $c->model('MyDB::Author')->search({}, {
                order_by => 'last_name,middle_name,last_name'
            });

            $authors_rs->result_class('DBIx::Class::ResultClass::HashRefInflator');

            my @authors = map {
                [ @{$_}{qw/first_name middle_name last_name/} ]
            } $authors_rs->all;

            my $entity = {
                sheets => [
                    {
                        name => 'Books',
                        header => ['Author', 'Title'], # will be bold
                        rows => \@books,
                    },
                    {
                        name => 'Authors',
                        header => ['First Name', 'Middle Name', 'Last Name'],
                        rows => \@authors,
                    },
                ],
                # the part before .xls, which is automatically appended
                filename => 'myapp-books-'.strftime('%m-%d-%Y', localtime)
            };

            $self->status_ok(
                $c,
                entity => $entity
            );
        }

    In your javascript, to initiate a file download:

        // this uses jQuery
        function export_to_excel() {
            $('<iframe '
             +'src="/rest/books?content-type=application%2Fvnd.ms-excel">')
            .hide().appendTo('body');
        }

    Note, the content-type query param is required if you're just linking to
    the action. It tells Catalyst::Controller::REST what you're serializing
    the data as.

DESCRIPTION
    Your entity should be either an array of arrays, an array of arrays of
    arrays, or a hash with the keys as described below and in the
    "SYNOPSIS".

    If entity is a hashref, keys should be:

  sheets
    An array of worksheets. Either sheets or a worksheet specification at
    the top level is required.

  filename
    Optional. The name of the file before .xls. Defaults to "data".

    Each sheet should be an array of arrays, or a hashref with the following
    fields:

  name
    Optional. The name of the worksheet.

  rows
    Required. The array of arrays of rows.

  header
    Optional, an array for the first line of the sheet, which will be in
    bold.

  column_widths
    Optional, the widths in characters of the columns. Otherwise the widths
    are calculated automatically from the data and header.

    If you only have one sheet, you can put it in the top level hash.

AUTHOR
    Rafael Kitover, "<rkitover at cpan.org>"

BUGS
    Please report any bugs or feature requests to
    "bug-catalyst-action-serialize-simpleexcel at rt.cpan.org", or through
    the web interface at
    <http://rt.cpan.org/NoAuth/ReportBug.html?Queue=Catalyst-Action-Serializ
    e-SimpleExcel>. I will be notified, and then you'll automatically be
    notified of progress on your bug as I make changes.

SEE ALSO
    Catalyst, Catalyst::Controller::REST, Catalyst::Action::REST,
    Catalyst::View::Excel::Template::Plus, Spreadsheet::WriteExcel,
    Spreadsheet::ParseExcel

SUPPORT
    You can find documentation for this module with the perldoc command.

        perldoc Catalyst::Action::Serialize::SimpleExcel

    You can also look for information at:

    *   RT: CPAN's request tracker

        <http://rt.cpan.org/NoAuth/Bugs.html?Dist=Catalyst-Action-Serialize-
        SimpleExcel>

    *   AnnoCPAN: Annotated CPAN documentation

        <http://annocpan.org/dist/Catalyst-Action-Serialize-SimpleExcel>

    *   CPAN Ratings

        <http://cpanratings.perl.org/d/Catalyst-Action-Serialize-SimpleExcel
        >

    *   Search CPAN

        <http://search.cpan.org/dist/Catalyst-Action-Serialize-SimpleExcel/>

COPYRIGHT & LICENSE
    Copyright (c) 2008-2011 Rafael Kitover

    This program is free software; you can redistribute it and/or modify it
    under the same terms as Perl itself.

